

typedef struct node{
    int data;
    struct node* esq;
    struct node* dir;
}node;

typedef struct node* p_node;


void pre_order(p_node raiz){
    if(raiz != NULL){
        printf("%d",raiz->data);
        pre_order(raiz->esq);
        pre_order(raiz->dir);
    }
}

//x e um contador
void n_folhas(p_node raiz,int *x){
    if(raiz != NULL){
        if(raiz->esq == NULL && raiz->dir == NULL){
            *x++;
        }
        n_folhas(raiz->esq,&x);
        n_folhas(raiz->dir,&x);

    }
}

void del_folhas(p_node raiz,int x){
    p_node ptr = raiz;
    if(raiz != NULL){
        if(raiz->esq == NULL && raiz->dir == NULL && raiz->data == x){
            free(ptr);
            ptr = NULL;
        }
        del_folhas(raiz->esq,x);
        del_folhas(raiz->dir,x);
    }
}

void equal(p_node raiz1,p_node raiz2,int *x){
    p_node ptr1 = raiz1;
    p_node ptr2 = raiz2;
    if(ptr1 != NULL && ptr2 != NULL){
        if(ptr1 == ptr2){
            *x = 1;
        }
        else if(ptr1 != ptr2){
            *x = 0;
            return;
        }
        equal(ptr1->esq,ptr2->esq,&x);
        equal(ptr1->dir,ptr2->dir,&x);
    }
    if(ptr1 == NULL && ptr2 == NULL){
        *x = 1;
    }
}

